{"ast":null,"code":"var _jsxFileName = \"/home/gilbertosleite/Documents/Dados/RecutramentoGilbertoLeite/techchallengesthima/src/components/AutoComplete/AutoComplete.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport SearchData from \"../../functions/SearchData/SearchData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  option: {\n    fontSize: 15,\n    \"& > span\": {\n      marginRight: 10,\n      fontSize: 18\n    }\n  }\n}));\n\nconst renderMovieCapa = movieCapa => /*#__PURE__*/_jsxDEV(\"img\", {\n  src: movieCapa,\n  alt: \"Imagem\",\n  width: \"50\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 3\n}, this);\n\nconst AutoCompleteMovie = () => {\n  _s();\n\n  const classes = useStyles();\n  const [arrayMovieA2021, setArrayMovieA2021] = React.useState([]);\n  const [nameMovie, setNameMovie] = React.useState(\"batman\");\n  console.log(\"Nome do Filme Auto: \", nameMovie);\n  React.useEffect(() => {\n    (async () => setArrayMovieA2021(await SearchData(nameMovie)))();\n  }, [nameMovie]);\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    fullWidth: true,\n    classes: {\n      option: classes.option\n    },\n    onChange: (e, v) => setNameMovie(v),\n    onClic: (e, v) => setNameMovie(v),\n    options: arrayMovieA2021,\n    getOptionSelected: (o, v) => o.option === v.value,\n    getOptionLabel: option => option.Title,\n    renderOption: option => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: renderMovieCapa(option.Poster)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), option.Title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this),\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      \"aria-labelledby\": \"Movies\",\n      id: \"movies\",\n      type: \"text\",\n      label: \"Escolha um Filme\",\n      variant: \"outlined\",\n      margin: \"dense\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AutoCompleteMovie, \"gVAC5GS+lC6VBv3Y5JeIGD2cWpA=\", false, function () {\n  return [useStyles];\n});\n\n_c = AutoCompleteMovie;\nexport default AutoCompleteMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutoCompleteMovie\");","map":{"version":3,"sources":["/home/gilbertosleite/Documents/Dados/RecutramentoGilbertoLeite/techchallengesthima/src/components/AutoComplete/AutoComplete.jsx"],"names":["React","TextField","makeStyles","Autocomplete","SearchData","useStyles","theme","option","fontSize","marginRight","renderMovieCapa","movieCapa","AutoCompleteMovie","classes","arrayMovieA2021","setArrayMovieA2021","useState","nameMovie","setNameMovie","console","log","useEffect","e","v","o","value","Title","Poster","params"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,EADJ;AAEN,gBAAY;AACVC,MAAAA,WAAW,EAAE,EADH;AAEVD,MAAAA,QAAQ,EAAE;AAFA;AAFN;AAD+B,CAAZ,CAAD,CAA5B;;AAUA,MAAME,eAAe,GAAIC,SAAD,iBACtB;AAAK,EAAA,GAAG,EAAEA,SAAV;AAAqB,EAAA,GAAG,EAAC,QAAzB;AAAkC,EAAA,KAAK,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,QADF;;AAIA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCf,KAAK,CAACgB,QAAN,CAAe,EAAf,CAA9C;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,KAAK,CAACgB,QAAN,CAAe,QAAf,CAAlC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,SAApC;AACAjB,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AACpB,KAAC,YAAYN,kBAAkB,CAAC,MAAMX,UAAU,CAACa,SAAD,CAAjB,CAA/B;AACD,GAFD,EAEG,CAACA,SAAD,CAFH;AAIA,sBACE,QAAC,YAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAE;AACPV,MAAAA,MAAM,EAAEM,OAAO,CAACN;AADT,KAFX;AAKE,IAAA,QAAQ,EAAE,CAACe,CAAD,EAAIC,CAAJ,KAAUL,YAAY,CAACK,CAAD,CALlC;AAME,IAAA,MAAM,EAAE,CAACD,CAAD,EAAIC,CAAJ,KAAUL,YAAY,CAACK,CAAD,CANhC;AAOE,IAAA,OAAO,EAAET,eAPX;AAQE,IAAA,iBAAiB,EAAE,CAACU,CAAD,EAAID,CAAJ,KAAUC,CAAC,CAACjB,MAAF,KAAagB,CAAC,CAACE,KAR9C;AASE,IAAA,cAAc,EAAGlB,MAAD,IAAYA,MAAM,CAACmB,KATrC;AAUE,IAAA,YAAY,EAAGnB,MAAD,iBACZ,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE;AAAA,kBAAOG,eAAe,CAACH,MAAM,CAACoB,MAAR;AAAtB;AAAA;AAAA;AAAA;AAAA,cADF,EAEGpB,MAAM,CAACmB,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAgBE,IAAA,WAAW,EAAGE,MAAD,iBACX,QAAC,SAAD,OACMA,MADN;AAEE,yBAAgB,QAFlB;AAGE,MAAA,EAAE,EAAC,QAHL;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,KAAK,EAAC,kBALR;AAME,MAAA,OAAO,EAAC,UANV;AAOE,MAAA,MAAM,EAAC,OAPT;AAQE,MAAA,SAAS;AARX;AAAA;AAAA;AAAA;AAAA;AAjBJ;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAxCD;;GAAMhB,iB;UACYP,S;;;KADZO,iB;AA0CN,eAAeA,iBAAf","sourcesContent":["import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport SearchData from \"../../functions/SearchData/SearchData\";\n\nconst useStyles = makeStyles((theme) => ({\n  option: {\n    fontSize: 15,\n    \"& > span\": {\n      marginRight: 10,\n      fontSize: 18,\n    },\n  },\n}));\n\nconst renderMovieCapa = (movieCapa) => (\n  <img src={movieCapa} alt=\"Imagem\" width=\"50\" />\n);\n\nconst AutoCompleteMovie = () => {\n  const classes = useStyles();\n  const [arrayMovieA2021, setArrayMovieA2021] = React.useState([]);\n  const [nameMovie, setNameMovie] = React.useState(\"batman\");\n  console.log(\"Nome do Filme Auto: \", nameMovie);\n  React.useEffect(() => {\n    (async () => setArrayMovieA2021(await SearchData(nameMovie)))();\n  }, [nameMovie]);\n\n  return (\n    <Autocomplete\n      fullWidth\n      classes={{\n        option: classes.option,\n      }}\n      onChange={(e, v) => setNameMovie(v)}\n      onClic={(e, v) => setNameMovie(v)}\n      options={arrayMovieA2021}\n      getOptionSelected={(o, v) => o.option === v.value}\n      getOptionLabel={(option) => option.Title}\n      renderOption={(option) => (\n        <React.Fragment>\n          <span>{renderMovieCapa(option.Poster)}</span>\n          {option.Title}\n        </React.Fragment>\n      )}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          aria-labelledby=\"Movies\"\n          id=\"movies\"\n          type=\"text\"\n          label=\"Escolha um Filme\"\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n        />\n      )}\n    />\n  );\n};\n\nexport default AutoCompleteMovie;\n"]},"metadata":{},"sourceType":"module"}