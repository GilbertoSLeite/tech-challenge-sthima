{"ast":null,"code":"var _jsxFileName = \"/home/gilbertosleite/Documents/Dados/RecutramentoGilbertoLeite/techchallengesthima/src/pages/Main/Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid } from \"@material-ui/core\"; //import favourite from \"../../data/favoutire.json\";\n\nimport { sortBy, useToggle, useInput, useTitle } from \"../../utils/General\";\nimport List from \"../../components/List/List\";\nimport Movie from \"../../components/Movie/Movie\";\nimport Setting from \"../../components/Setting/Setting\";\nimport SearchData from \"../../functions/SearchData/SearchData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar documentaries = [];\nconst moduleLayout = {\n  xs: 12,\n  sm: 6,\n  md: 4,\n  lg: 3,\n  xl: 3\n};\nconst listLayout = {\n  xs: 12,\n  sm: 12,\n  md: 12,\n  lg: 6,\n  xl: 6\n};\n\nconst Main = () => {\n  _s();\n\n  const [arrayMovieA2021, setArrayMovieA2021] = React.useState([]);\n  const {\n    toggle,\n    setToggle\n  } = useToggle();\n  const [searchValue, setSearchValue] = useInput();\n  useTitle(\"Filmes | Sthima\");\n  React.useEffect(() => {\n    (async () => setArrayMovieA2021(await SearchData()))();\n  }, []);\n  const props = {\n    toggle,\n    setToggle,\n    searchValue,\n    setSearchValue\n  };\n  const layout = toggle ? listLayout : moduleLayout;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Setting, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        ...layout,\n        children: toggle ? /*#__PURE__*/_jsxDEV(List, { ...arrayMovieA2021\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Movie, { ...arrayMovieA2021\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Main, \"9AJMGEMxeSzav0esGUB8V0bawW8=\", false, function () {\n  return [useToggle, useInput, useTitle];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/gilbertosleite/Documents/Dados/RecutramentoGilbertoLeite/techchallengesthima/src/pages/Main/Main.jsx"],"names":["React","Grid","sortBy","useToggle","useInput","useTitle","List","Movie","Setting","SearchData","documentaries","moduleLayout","xs","sm","md","lg","xl","listLayout","Main","arrayMovieA2021","setArrayMovieA2021","useState","toggle","setToggle","searchValue","setSearchValue","useEffect","props","layout"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB,C,CACA;;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,QAA5B,EAAsCC,QAAtC,QAAsD,qBAAtD;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;;;AAEA,IAAIC,aAAa,GAAG,EAApB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,EAAE,EAAE,EADe;AAEnBC,EAAAA,EAAE,EAAE,CAFe;AAGnBC,EAAAA,EAAE,EAAE,CAHe;AAInBC,EAAAA,EAAE,EAAE,CAJe;AAKnBC,EAAAA,EAAE,EAAE;AALe,CAArB;AAQA,MAAMC,UAAU,GAAG;AACjBL,EAAAA,EAAE,EAAE,EADa;AAEjBC,EAAAA,EAAE,EAAE,EAFa;AAGjBC,EAAAA,EAAE,EAAE,EAHa;AAIjBC,EAAAA,EAAE,EAAE,CAJa;AAKjBC,EAAAA,EAAE,EAAE;AALa,CAAnB;;AAQA,MAAME,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCpB,KAAK,CAACqB,QAAN,CAAe,EAAf,CAA9C;AACA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAwBpB,SAAS,EAAvC;AACA,QAAM,CAACqB,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,EAA9C;AACAC,EAAAA,QAAQ,CAAC,iBAAD,CAAR;AAEAL,EAAAA,KAAK,CAAC0B,SAAN,CAAgB,MAAM;AACpB,KAAC,YAAYN,kBAAkB,CAAC,MAAMX,UAAU,EAAjB,CAA/B;AACD,GAFD,EAEG,EAFH;AAIA,QAAMkB,KAAK,GAAG;AACZL,IAAAA,MADY;AAEZC,IAAAA,SAFY;AAGZC,IAAAA,WAHY;AAIZC,IAAAA;AAJY,GAAd;AAOA,QAAMG,MAAM,GAAGN,MAAM,GAAGL,UAAH,GAAgBN,YAArC;AAEA,sBACE;AAAA,4BACE,QAAC,OAAD,OAAagB;AAAb;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,WAAeC,MAAf;AAAA,kBACGN,MAAM,gBACL,QAAC,IAAD,OAAUH;AAAV;AAAA;AAAA;AAAA;AAAA,gBADK,gBAGL,QAAC,KAAD,OAAWA;AAAX;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAcD,CAjCD;;GAAMD,I;UAE0Bf,S,EACQC,Q,EACtCC,Q;;;KAJIa,I;AAmCN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n//import favourite from \"../../data/favoutire.json\";\nimport { sortBy, useToggle, useInput, useTitle } from \"../../utils/General\";\nimport List from \"../../components/List/List\";\nimport Movie from \"../../components/Movie/Movie\";\nimport Setting from \"../../components/Setting/Setting\";\nimport SearchData from \"../../functions/SearchData/SearchData\";\n\nvar documentaries = [];\n\nconst moduleLayout = {\n  xs: 12,\n  sm: 6,\n  md: 4,\n  lg: 3,\n  xl: 3,\n};\n\nconst listLayout = {\n  xs: 12,\n  sm: 12,\n  md: 12,\n  lg: 6,\n  xl: 6,\n};\n\nconst Main = () => {\n  const [arrayMovieA2021, setArrayMovieA2021] = React.useState([]);\n  const { toggle, setToggle } = useToggle();\n  const [searchValue, setSearchValue] = useInput();\n  useTitle(\"Filmes | Sthima\");\n\n  React.useEffect(() => {\n    (async () => setArrayMovieA2021(await SearchData()))();\n  }, []);\n\n  const props = {\n    toggle,\n    setToggle,\n    searchValue,\n    setSearchValue,\n  };\n\n  const layout = toggle ? listLayout : moduleLayout;\n\n  return (\n    <>\n      <Setting {...props} />\n      <Grid container spacing={4}>\n        <Grid item {...layout}>\n          {toggle ? (\n            <List {...arrayMovieA2021} />\n          ) : (\n            <Movie {...arrayMovieA2021} />\n          )}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}