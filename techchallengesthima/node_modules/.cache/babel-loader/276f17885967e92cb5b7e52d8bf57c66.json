{"ast":null,"code":"var _jsxFileName = \"/home/gilbertosleite/Documents/Dados/RecutramentoGilbertoLeite/techchallengesthima/src/components/Movie/Movie.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, CardMedia, Typography } from \"@material-ui/core\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport LazyLoad from \"react-lazyload\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useHover } from \"../../utils/General\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  card: {\n    position: \"relative\",\n    height: 512,\n    display: \"flex\",\n    flexDirection: \"column\",\n    transition: `all 0.2s ease-in-out`,\n    backgroundColor: theme.palette.type === \"dark\" ? \"#333\" : \"#fff\"\n  },\n  cardMedia: {\n    height: \"512px\",\n    transition: `all 0.5s ease-in-out`,\n    \"&:hover\": {\n      transform: `scale(1.1)`\n    }\n  },\n  cardContent: {\n    position: \"absolute\",\n    width: \"100%\",\n    bottom: 0,\n    zIndex: theme.zIndex.drawer - 1,\n    backgroundColor: \"rgba(20,20,20,0.75)\",\n    color: \"#ccc\",\n    fontSize: 14,\n    fontFamily: \"Verdana, Arial, sans-serif\",\n    maxHeight: \"30%\",\n    padding: \"15px 10%\",\n    textAlign: \"center\",\n    borderTop: \"1px solid rgba(255,255,255,0.2)\",\n    transition: `all 0.5s ease-in-out`\n  },\n  cardDivider: {\n    display: \"block\",\n    height: \"1px\",\n    border: 0,\n    borderTop: \"1px solid #666\"\n  },\n  cardLink: {\n    textDecoration: \"none\",\n    color: fade(theme.palette.common.white, 0.55),\n    \"&:hover\": {\n      color: fade(theme.palette.common.white, 0.75)\n    }\n  },\n  ratingCount: {\n    color: fade(theme.palette.common.white, 0.55)\n  }\n}));\n\nconst Movie = ({\n  documentaries\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [hover, setHover] = useHover();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.card,\n    ...setHover,\n    children: [/*#__PURE__*/_jsxDEV(LazyLoad, {\n      once: true,\n      height: 200,\n      offset: [100, 0],\n      overflow: true,\n      children: /*#__PURE__*/_jsxDEV(CardMedia, {\n        className: classes.cardMedia,\n        image: \"https://m.media-amazon.com/images/M/MV5BOTY4YjI2N2MtYmFlMC00ZjcyLTg3YjEtMDQyM2ZjYzQ5YWFkXkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SX300.jpg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.cardContent,\n      style: {\n        opacity: hover ? 100 : 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: documentaries.Type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: classes.ratingCount,\n        children: documentaries.Type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: classes.cardDivider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        href: \"https://www.imdb.com/title/\" + documentaries.imdbID + \"/?ref_=adv_li_i\",\n        className: classes.cardLink,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `${documentaries.Title} (${documentaries.Year})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movie, \"+gwogu6QkG0ncjFGMB1n1+S3UYI=\", false, function () {\n  return [useStyles, useHover];\n});\n\n_c = Movie;\nexport default Movie;\nMovie.propTypes = {\n  documentaries: PropTypes.array.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/home/gilbertosleite/Documents/Dados/RecutramentoGilbertoLeite/techchallengesthima/src/components/Movie/Movie.jsx"],"names":["React","PropTypes","Card","CardMedia","Typography","fade","LazyLoad","makeStyles","useHover","useStyles","theme","card","position","height","display","flexDirection","transition","backgroundColor","palette","type","cardMedia","transform","cardContent","width","bottom","zIndex","drawer","color","fontSize","fontFamily","maxHeight","padding","textAlign","borderTop","cardDivider","border","cardLink","textDecoration","common","white","ratingCount","Movie","documentaries","classes","hover","setHover","opacity","Type","imdbID","Title","Year","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, CardMedia, Typography } from \"@material-ui/core\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport LazyLoad from \"react-lazyload\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nimport { useHover } from \"../../utils/General\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    position: \"relative\",\n    height: 512,\n    display: \"flex\",\n    flexDirection: \"column\",\n    transition: `all 0.2s ease-in-out`,\n    backgroundColor: theme.palette.type === \"dark\" ? \"#333\" : \"#fff\",\n  },\n  cardMedia: {\n    height: \"512px\",\n    transition: `all 0.5s ease-in-out`,\n    \"&:hover\": {\n      transform: `scale(1.1)`,\n    },\n  },\n  cardContent: {\n    position: \"absolute\",\n    width: \"100%\",\n    bottom: 0,\n    zIndex: theme.zIndex.drawer - 1,\n    backgroundColor: \"rgba(20,20,20,0.75)\",\n    color: \"#ccc\",\n    fontSize: 14,\n    fontFamily: \"Verdana, Arial, sans-serif\",\n    maxHeight: \"30%\",\n    padding: \"15px 10%\",\n    textAlign: \"center\",\n    borderTop: \"1px solid rgba(255,255,255,0.2)\",\n    transition: `all 0.5s ease-in-out`,\n  },\n  cardDivider: {\n    display: \"block\",\n    height: \"1px\",\n    border: 0,\n    borderTop: \"1px solid #666\",\n  },\n  cardLink: {\n    textDecoration: \"none\",\n    color: fade(theme.palette.common.white, 0.55),\n    \"&:hover\": {\n      color: fade(theme.palette.common.white, 0.75),\n    },\n  },\n  ratingCount: {\n    color: fade(theme.palette.common.white, 0.55),\n  },\n}));\n\nconst Movie = ({ documentaries }) => {\n  const classes = useStyles();\n  const [hover, setHover] = useHover();\n\n  return (\n    <Card className={classes.card} {...setHover}>\n      <LazyLoad once={true} height={200} offset={[100, 0]} overflow={true}>\n        <CardMedia\n          className={classes.cardMedia}\n          image={\n            \"https://m.media-amazon.com/images/M/MV5BOTY4YjI2N2MtYmFlMC00ZjcyLTg3YjEtMDQyM2ZjYzQ5YWFkXkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SX300.jpg\"\n          }\n        />\n      </LazyLoad>\n\n      <div className={classes.cardContent} style={{ opacity: hover ? 100 : 0 }}>\n        <Typography>{documentaries.Type}</Typography>\n        <small className={classes.ratingCount}>{documentaries.Type}</small>\n\n        <hr className={classes.cardDivider} />\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={\n            \"https://www.imdb.com/title/\" +\n            documentaries.imdbID +\n            \"/?ref_=adv_li_i\"\n          }\n          className={classes.cardLink}\n        >\n          <p>{`${documentaries.Title} (${documentaries.Year})`}</p>\n        </a>\n      </div>\n    </Card>\n  );\n};\n\nexport default Movie;\n\nMovie.propTypes = {\n  documentaries: PropTypes.array.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}