{"ast":null,"code":"var _jsxFileName = \"/home/gilbertosleite/Documents/Dados/RecutramentoGilbertoLeite/techchallengesthima/src/components/Drawer/Drawer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { IconButton, Divider, List, Drawer, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport classNames from \"classnames\";\nimport { ChevronLeft, Movie, BarChart, Comment } from \"@material-ui/icons\";\n/**\n * menus\n * @type {Array}\n * @value [0: mainMenu, 1: sideMenu]\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst menus = [[{\n  children: /*#__PURE__*/_jsxDEV(Movie, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 17\n  }, this),\n  label: \"Documentaries\",\n  route: \"/\"\n}, {\n  children: /*#__PURE__*/_jsxDEV(BarChart, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 17\n  }, this),\n  label: \"Statistics\",\n  route: \"/statistics\"\n}], [{\n  children: /*#__PURE__*/_jsxDEV(Comment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 17\n  }, this),\n  label: \"Comment\",\n  route: \"/comment\"\n}]];\n\nconst Menus = ({\n  menus,\n  toggle\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: menus.map(menu => /*#__PURE__*/_jsxDEV(Link, {\n    to: menu.route,\n    style: {\n      textDecoration: \"none\",\n      color: \"#fafafa\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ListItem, {\n      button: true,\n      onClick: toggle,\n      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n        children: menu.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: menu.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, menu.label, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this))\n}, void 0, false);\n\n_c = Menus;\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  drawerPaper: {\n    whiteSpace: \"nowrap\",\n    backgroundColor: theme.palette.type === \"dark\" ? \"#212121\" : \"#ffffff\",\n    opacity: 0.85,\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: 0\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    height: 48\n  }\n}));\n/**\n * DrawerChild\n * @type {{toggle: Boolean, setToggle: Function}}\n */\n\nDrawerChild.propTypes = {\n  toggle: PropTypes.bool.isRequired,\n  setToggle: PropTypes.func.isRequired\n};\n\nfunction DrawerChild({\n  toggle,\n  setToggle\n}) {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    variant: \"permanent\",\n    classes: {\n      paper: classNames(classes.drawerPaper, toggle || classes.drawerPaperClose)\n    },\n    open: toggle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.toolbar,\n      children: toggle && /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"Close drawer\",\n        onClick: setToggle,\n        children: /*#__PURE__*/_jsxDEV(ChevronLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), menus.map((value, key) => /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        component: \"nav\",\n        children: /*#__PURE__*/_jsxDEV(Menus, {\n          menus: value,\n          toggle: setToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DrawerChild, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = DrawerChild;\nexport default DrawerChild;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Menus\");\n$RefreshReg$(_c2, \"DrawerChild\");","map":{"version":3,"sources":["/home/gilbertosleite/Documents/Dados/RecutramentoGilbertoLeite/techchallengesthima/src/components/Drawer/Drawer.jsx"],"names":["React","Fragment","Link","PropTypes","IconButton","Divider","List","Drawer","ListItem","ListItemIcon","ListItemText","makeStyles","classNames","ChevronLeft","Movie","BarChart","Comment","menus","children","label","route","Menus","toggle","map","menu","textDecoration","color","drawerWidth","useStyles","theme","drawerPaper","whiteSpace","backgroundColor","palette","type","opacity","width","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","toolbar","display","alignItems","justifyContent","height","DrawerChild","propTypes","bool","isRequired","setToggle","func","classes","paper","value","key"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {\n  IconButton,\n  Divider,\n  List,\n  Drawer,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport classNames from \"classnames\";\nimport { ChevronLeft, Movie, BarChart, Comment } from \"@material-ui/icons\";\n\n/**\n * menus\n * @type {Array}\n * @value [0: mainMenu, 1: sideMenu]\n */\nconst menus = [\n  [\n    {\n      children: <Movie />,\n      label: \"Documentaries\",\n      route: \"/\",\n    },\n    {\n      children: <BarChart />,\n      label: \"Statistics\",\n      route: \"/statistics\",\n    },\n  ],\n  [\n    {\n      children: <Comment />,\n      label: \"Comment\",\n      route: \"/comment\",\n    },\n  ],\n];\n\nconst Menus = ({ menus, toggle }) => (\n  <>\n    {menus.map((menu) => (\n      <Link\n        to={menu.route}\n        key={menu.label}\n        style={{ textDecoration: \"none\", color: \"#fafafa\" }}\n      >\n        <ListItem button onClick={toggle}>\n          <ListItemIcon>{menu.children}</ListItemIcon>\n          <ListItemText primary={menu.label} />\n        </ListItem>\n      </Link>\n    ))}\n  </>\n);\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  drawerPaper: {\n    whiteSpace: \"nowrap\",\n    backgroundColor: theme.palette.type === \"dark\" ? \"#212121\" : \"#ffffff\",\n    opacity: 0.85,\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: 0,\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    height: 48,\n  },\n}));\n\n/**\n * DrawerChild\n * @type {{toggle: Boolean, setToggle: Function}}\n */\nDrawerChild.propTypes = {\n  toggle: PropTypes.bool.isRequired,\n  setToggle: PropTypes.func.isRequired,\n};\n\nfunction DrawerChild({ toggle, setToggle }) {\n  const classes = useStyles();\n  return (\n    <Drawer\n      variant=\"permanent\"\n      classes={{\n        paper: classNames(\n          classes.drawerPaper,\n          toggle || classes.drawerPaperClose\n        ),\n      }}\n      open={toggle}\n    >\n      <div className={classes.toolbar}>\n        {toggle && (\n          <IconButton aria-label=\"Close drawer\" onClick={setToggle}>\n            <ChevronLeft />\n          </IconButton>\n        )}\n      </div>\n      {menus.map((value, key) => (\n        <Fragment key={key}>\n          <Divider />\n          <List component=\"nav\">\n            <Menus menus={value} toggle={setToggle} />\n          </List>\n        </Fragment>\n      ))}\n    </Drawer>\n  );\n}\n\nexport default DrawerChild;\n"]},"metadata":{},"sourceType":"module"}