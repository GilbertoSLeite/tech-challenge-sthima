{"ast":null,"code":"var _jsxFileName = \"/home/gilbertosleite/Documents/Dados/RecutramentoGilbertoLeite/techchallengesthima/src/components/AppBar/AppBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { IconButton, Toolbar, AppBar, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { InsertLink } from \"@material-ui/icons\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport SearchData from \"../../functions/SearchData/SearchData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    backgroundColor: theme.palette.type === \"dark\" ? \"#1e1e1e\" : \"#ffffff\",\n    opacity: 0.85,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  grow: {\n    flexGrow: 1\n  },\n  cardLink: {\n    textDecoration: \"none\",\n    color: theme.palette.type === \"dark\" ? \"#fbfbfb\" : \"#1e1e1e\"\n  }\n}));\n\nfunction AppBarChild() {\n  _s();\n\n  const classes = useStyles();\n  const [arrayMovieA2021, setArrayMovieA2021] = React.useState([]);\n  const [nameMovie, setNameMovie] = React.useState(\"\");\n  React.useEffect(() => {\n    (async () => setArrayMovieA2021(await SearchData(!nameMovie ? \"batman\" : nameMovie)))();\n  }, [nameMovie]);\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"absolute\",\n    className: classes.appBar,\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      disableGutters: true,\n      variant: \"dense\",\n      children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n        onChange: (e, v) => setNameMovie(!v ? \"batman\" : v.Title),\n        options: arrayMovieA2021,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          \"aria-labelledby\": \"Movies\",\n          id: \"movies\",\n          type: \"text\",\n          label: \"Filmes\",\n          helperText: \"Escolha um Filme\",\n          variant: \"outlined\",\n          margin: \"dense\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.grow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"Site\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          \"aria-label\": \"Site\",\n          rel: \"noopener noreferrer\",\n          href: \"https://sthima.com.br/\",\n          className: classes.cardLink,\n          children: /*#__PURE__*/_jsxDEV(InsertLink, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AppBarChild, \"+fTd3t+q0KrQQjHQNRo6nXhOWMY=\", false, function () {\n  return [useStyles];\n});\n\n_c = AppBarChild;\nexport default AppBarChild;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppBarChild\");","map":{"version":3,"sources":["/home/gilbertosleite/Documents/Dados/RecutramentoGilbertoLeite/techchallengesthima/src/components/AppBar/AppBar.jsx"],"names":["React","IconButton","Toolbar","AppBar","TextField","makeStyles","InsertLink","Autocomplete","SearchData","useStyles","theme","appBar","backgroundColor","palette","type","opacity","transition","transitions","create","easing","sharp","duration","leavingScreen","grow","flexGrow","cardLink","textDecoration","color","AppBarChild","classes","arrayMovieA2021","setArrayMovieA2021","useState","nameMovie","setNameMovie","useEffect","e","v","Title","params"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { IconButton, Toolbar, AppBar, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { InsertLink } from \"@material-ui/icons\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport SearchData from \"../../functions/SearchData/SearchData\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    backgroundColor: theme.palette.type === \"dark\" ? \"#1e1e1e\" : \"#ffffff\",\n    opacity: 0.85,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  cardLink: {\n    textDecoration: \"none\",\n    color: theme.palette.type === \"dark\" ? \"#fbfbfb\" : \"#1e1e1e\",\n  },\n}));\n\nfunction AppBarChild() {\n  const classes = useStyles();\n  const [arrayMovieA2021, setArrayMovieA2021] = React.useState([]);\n  const [nameMovie, setNameMovie] = React.useState(\"\");\n\n  React.useEffect(() => {\n    (async () =>\n      setArrayMovieA2021(\n        await SearchData(!nameMovie ? \"batman\" : nameMovie)\n      ))();\n  }, [nameMovie]);\n\n  return (\n    <AppBar position=\"absolute\" className={classes.appBar}>\n      <Toolbar disableGutters variant=\"dense\">\n        <Autocomplete\n          onChange={(e, v) => setNameMovie(!v ? \"batman\" : v.Title)}\n          options={arrayMovieA2021}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              aria-labelledby=\"Movies\"\n              id=\"movies\"\n              type=\"text\"\n              label=\"Filmes\"\n              helperText=\"Escolha um Filme\"\n              variant=\"outlined\"\n              margin=\"dense\"\n              fullWidth\n            />\n          )}\n        />\n        <div className={classes.grow} />\n        <IconButton aria-label=\"Site\">\n          <a\n            target=\"_blank\"\n            aria-label=\"Site\"\n            rel=\"noopener noreferrer\"\n            href={\"https://sthima.com.br/\"}\n            className={classes.cardLink}\n          >\n            <InsertLink fontSize=\"small\" />\n          </a>\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default AppBarChild;\n"]},"metadata":{},"sourceType":"module"}