{"ast":null,"code":"var _jsxFileName = \"/home/gilbertosleite/Documents/Dados/RecutramentoGilbertoLeite/techchallengesthima/src/components/Setting/Setting.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport { ExpandMore, Search, ViewList, ViewModule, Sort } from \"@material-ui/icons\";\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, InputBase, IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport { useTarget } from \"../../utils/General\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sorts = {\n  Title: \"docTitle\",\n  Rate: \"ratingValue\",\n  Year: \"docYear\"\n};\nconst useStyles = makeStyles(theme => ({\n  content: {\n    backgroundColor: \"transparent\",\n    boxShadow: \"none\",\n    marginTop: theme.spacing(-3)\n  },\n  summary: {\n    marginTop: theme.spacing(-3)\n  },\n  grow: {\n    flexGrow: 1\n  },\n  search: {\n    position: \"relative\",\n    height: \"90%\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.2)\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing(8),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\",\n    height: \"100%\",\n    width: \"100%\"\n  },\n  inputInput: {\n    paddingLeft: theme.spacing(8),\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 120,\n      \"&:focus\": {\n        width: 200\n      }\n    }\n  }\n}));\n/**\n * Setting\n * @type {{searchValue: String, setLSortValue: Function, setSearchValue: Function, setToggle: Function, toggle: Boolean}}\n */\n\nSetting.propTypes = {\n  searchValue: PropTypes.string.isRequired,\n  setLSortValue: PropTypes.func.isRequired,\n  setSearchValue: PropTypes.func.isRequired,\n  setToggle: PropTypes.func.isRequired,\n  toggle: PropTypes.bool.isRequired\n};\n\nfunction Setting({\n  toggle,\n  setToggle,\n  searchValue,\n  setSearchValue,\n  setLSortValue\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [target, {\n    setTarget,\n    freeTarget\n  }] = useTarget();\n\n  function handleItemClick(event) {\n    setLSortValue(sorts[event.currentTarget.textContent]);\n    freeTarget();\n  }\n\n  return /*#__PURE__*/_jsxDEV(ExpansionPanel, {\n    className: classes.content,\n    children: [/*#__PURE__*/_jsxDEV(ExpansionPanelSummary, {\n      \"aria-label\": \"Toggle setting\",\n      expandIcon: /*#__PURE__*/_jsxDEV(ExpandMore, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this),\n      className: classes.summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpansionPanelDetails, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"Toggle layout\",\n        onClick: setToggle,\n        children: toggle ? /*#__PURE__*/_jsxDEV(ViewList, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(ViewModule, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"Toggle sorted\",\n        onClick: setTarget,\n        children: /*#__PURE__*/_jsxDEV(Sort, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        id: \"simple-menu\",\n        anchorEl: target,\n        open: Boolean(target),\n        onClose: freeTarget,\n        children: Object.keys(sorts).map((key, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: handleItemClick,\n          children: key\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.grow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.search,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.searchIcon,\n          children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n          placeholder: \"Search\\u2026\",\n          value: searchValue,\n          onChange: setSearchValue,\n          classes: {\n            root: classes.inputRoot,\n            input: classes.inputInput\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Setting, \"9562u6tajiXcRcC0CDRs8U984Sg=\", false, function () {\n  return [useStyles, useTarget];\n});\n\n_c = Setting;\nexport default Setting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Setting\");","map":{"version":3,"sources":["/home/gilbertosleite/Documents/Dados/RecutramentoGilbertoLeite/techchallengesthima/src/components/Setting/Setting.jsx"],"names":["React","PropTypes","makeStyles","fade","ExpandMore","Search","ViewList","ViewModule","Sort","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","InputBase","IconButton","Menu","MenuItem","useTarget","sorts","Title","Rate","Year","useStyles","theme","content","backgroundColor","boxShadow","marginTop","spacing","summary","grow","flexGrow","search","position","height","borderRadius","shape","palette","common","white","marginLeft","width","breakpoints","up","searchIcon","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Setting","propTypes","searchValue","string","isRequired","setLSortValue","func","setSearchValue","setToggle","toggle","bool","classes","target","setTarget","freeTarget","handleItemClick","event","currentTarget","textContent","Boolean","Object","keys","map","key","index","root","input"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport {\n  ExpandMore,\n  Search,\n  ViewList,\n  ViewModule,\n  Sort,\n} from \"@material-ui/icons\";\nimport {\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  InputBase,\n  IconButton,\n  Menu,\n  MenuItem,\n} from \"@material-ui/core\";\n\nimport { useTarget } from \"../../utils/General\";\n\nconst sorts = { Title: \"docTitle\", Rate: \"ratingValue\", Year: \"docYear\" };\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    backgroundColor: \"transparent\",\n    boxShadow: \"none\",\n    marginTop: theme.spacing(-3),\n  },\n  summary: {\n    marginTop: theme.spacing(-3),\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  search: {\n    position: \"relative\",\n    height: \"90%\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.2),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(8),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n    height: \"100%\",\n    width: \"100%\",\n  },\n  inputInput: {\n    paddingLeft: theme.spacing(8),\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 120,\n      \"&:focus\": {\n        width: 200,\n      },\n    },\n  },\n}));\n\n/**\n * Setting\n * @type {{searchValue: String, setLSortValue: Function, setSearchValue: Function, setToggle: Function, toggle: Boolean}}\n */\nSetting.propTypes = {\n  searchValue: PropTypes.string.isRequired,\n  setLSortValue: PropTypes.func.isRequired,\n  setSearchValue: PropTypes.func.isRequired,\n  setToggle: PropTypes.func.isRequired,\n  toggle: PropTypes.bool.isRequired,\n};\n\nfunction Setting({\n  toggle,\n  setToggle,\n  searchValue,\n  setSearchValue,\n  setLSortValue,\n}) {\n  const classes = useStyles();\n  const [target, { setTarget, freeTarget }] = useTarget();\n\n  function handleItemClick(event) {\n    setLSortValue(sorts[event.currentTarget.textContent]);\n    freeTarget();\n  }\n\n  return (\n    <ExpansionPanel className={classes.content}>\n      <ExpansionPanelSummary\n        aria-label=\"Toggle setting\"\n        expandIcon={<ExpandMore />}\n        className={classes.summary}\n      ></ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <IconButton aria-label=\"Toggle layout\" onClick={setToggle}>\n          {toggle ? (\n            <ViewList fontSize=\"small\" />\n          ) : (\n            <ViewModule fontSize=\"small\" />\n          )}\n        </IconButton>\n        <IconButton aria-label=\"Toggle sorted\" onClick={setTarget}>\n          <Sort fontSize=\"small\" />\n        </IconButton>\n\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={target}\n          open={Boolean(target)}\n          onClose={freeTarget}\n        >\n          {Object.keys(sorts).map((key, index) => (\n            <MenuItem key={index} onClick={handleItemClick}>\n              {key}\n            </MenuItem>\n          ))}\n        </Menu>\n\n        <div className={classes.grow} />\n        <div className={classes.search}>\n          <div className={classes.searchIcon}>\n            <Search />\n          </div>\n          <InputBase\n            placeholder=\"Search…\"\n            value={searchValue}\n            onChange={setSearchValue}\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n          />\n        </div>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n}\n\nexport default Setting;\n"]},"metadata":{},"sourceType":"module"}