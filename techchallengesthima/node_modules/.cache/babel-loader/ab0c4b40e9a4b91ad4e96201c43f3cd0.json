{"ast":null,"code":"var _jsxFileName = \"/home/gilbertosleite/Documents/Dados/RecutramentoGilbertoLeite/techchallengesthima/src/components/AppBar/AppBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Toolbar, AppBar, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport SearchData from \"../../functions/SearchData/SearchData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    backgroundColor: theme.palette.type === \"dark\" ? \"#1e1e1e\" : \"#ffffff\",\n    opacity: 0.85\n  },\n  option: {\n    fontSize: 15,\n    \"& > span\": {\n      marginRight: 10,\n      fontSize: 18\n    }\n  }\n}));\n\nfunction AppBarChild() {\n  _s();\n\n  const classes = useStyles();\n  const [arrayMovieA2021, setArrayMovieA2021] = React.useState([]);\n  const [nameMovie, setNameMovie] = React.useState(\"\");\n  React.useEffect(() => {\n    (async () => setArrayMovieA2021(await SearchData(!nameMovie ? \"batman\" : nameMovie)))();\n  }, [nameMovie]);\n\n  const renderMovieCapa = () => /*#__PURE__*/_jsxDEV(\"image\", {\n    src: option.Poster,\n    alt: \"Imagem\",\n    width: \"50\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"fixed\",\n    className: classes.appBar,\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      disableGutters: true,\n      variant: \"regular\",\n      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n        fullWidth: true,\n        classes: {\n          option: classes.option\n        },\n        onChange: (e, v) => setNameMovie(!v ? \"\" : v.Title),\n        options: arrayMovieA2021,\n        getOptionLabel: option => option.Title,\n        renderOption: option => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: option.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this),\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          \"aria-labelledby\": \"Movies\",\n          id: \"movies\",\n          type: \"text\",\n          label: \"Escolha um Filme\",\n          variant: \"outlined\",\n          margin: \"dense\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AppBarChild, \"+fTd3t+q0KrQQjHQNRo6nXhOWMY=\", false, function () {\n  return [useStyles];\n});\n\n_c = AppBarChild;\nexport default AppBarChild;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppBarChild\");","map":{"version":3,"sources":["/home/gilbertosleite/Documents/Dados/RecutramentoGilbertoLeite/techchallengesthima/src/components/AppBar/AppBar.jsx"],"names":["React","Toolbar","AppBar","TextField","makeStyles","Autocomplete","SearchData","useStyles","theme","appBar","backgroundColor","palette","type","opacity","option","fontSize","marginRight","AppBarChild","classes","arrayMovieA2021","setArrayMovieA2021","useState","nameMovie","setNameMovie","useEffect","renderMovieCapa","Poster","e","v","Title","params"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,SAA1B,QAA2C,mBAA3C;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GAAgC,SAAhC,GAA4C,SADvD;AAENC,IAAAA,OAAO,EAAE;AAFH,GAD+B;AAKvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,EADJ;AAEN,gBAAY;AACVC,MAAAA,WAAW,EAAE,EADH;AAEVD,MAAAA,QAAQ,EAAE;AAFA;AAFN;AAL+B,CAAZ,CAAD,CAA5B;;AAcA,SAASE,WAAT,GAAuB;AAAA;;AACrB,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AACA,QAAM,CAACY,eAAD,EAAkBC,kBAAlB,IAAwCpB,KAAK,CAACqB,QAAN,CAAe,EAAf,CAA9C;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BvB,KAAK,CAACqB,QAAN,CAAe,EAAf,CAAlC;AAEArB,EAAAA,KAAK,CAACwB,SAAN,CAAgB,MAAM;AACpB,KAAC,YACCJ,kBAAkB,CAChB,MAAMd,UAAU,CAAC,CAACgB,SAAD,GAAa,QAAb,GAAwBA,SAAzB,CADA,CADpB;AAID,GALD,EAKG,CAACA,SAAD,CALH;;AAOA,QAAMG,eAAe,GAAG,mBACtB;AAAO,IAAA,GAAG,EAAEX,MAAM,CAACY,MAAnB;AAA2B,IAAA,GAAG,EAAC,QAA/B;AAAwC,IAAA,KAAK,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,UADF;;AAIA,sBACE,QAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,OAAjB;AAAyB,IAAA,SAAS,EAAER,OAAO,CAACT,MAA5C;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,cAAc,MAAvB;AAAwB,MAAA,OAAO,EAAC,SAAhC;AAAA,6BACE,QAAC,YAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,OAAO,EAAE;AACPK,UAAAA,MAAM,EAAEI,OAAO,CAACJ;AADT,SAFX;AAKE,QAAA,QAAQ,EAAE,CAACa,CAAD,EAAIC,CAAJ,KAAUL,YAAY,CAAC,CAACK,CAAD,GAAK,EAAL,GAAUA,CAAC,CAACC,KAAb,CALlC;AAME,QAAA,OAAO,EAAEV,eANX;AAOE,QAAA,cAAc,EAAGL,MAAD,IAAYA,MAAM,CAACe,KAPrC;AAQE,QAAA,YAAY,EAAGf,MAAD,iBACZ,QAAC,KAAD,CAAO,QAAP;AAAA,oBAAiBA,MAAM,CAACe;AAAxB;AAAA;AAAA;AAAA;AAAA,gBATJ;AAWE,QAAA,WAAW,EAAGC,MAAD,iBACX,QAAC,SAAD,OACMA,MADN;AAEE,6BAAgB,QAFlB;AAGE,UAAA,EAAE,EAAC,QAHL;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,KAAK,EAAC,kBALR;AAME,UAAA,OAAO,EAAC,UANV;AAOE,UAAA,MAAM,EAAC,OAPT;AAQE,UAAA,SAAS;AARX;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GA9CQb,W;UACSV,S;;;KADTU,W;AAgDT,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { Toolbar, AppBar, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport SearchData from \"../../functions/SearchData/SearchData\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    backgroundColor: theme.palette.type === \"dark\" ? \"#1e1e1e\" : \"#ffffff\",\n    opacity: 0.85,\n  },\n  option: {\n    fontSize: 15,\n    \"& > span\": {\n      marginRight: 10,\n      fontSize: 18,\n    },\n  },\n}));\n\nfunction AppBarChild() {\n  const classes = useStyles();\n  const [arrayMovieA2021, setArrayMovieA2021] = React.useState([]);\n  const [nameMovie, setNameMovie] = React.useState(\"\");\n\n  React.useEffect(() => {\n    (async () =>\n      setArrayMovieA2021(\n        await SearchData(!nameMovie ? \"batman\" : nameMovie)\n      ))();\n  }, [nameMovie]);\n\n  const renderMovieCapa = () => (\n    <image src={option.Poster} alt=\"Imagem\" width=\"50\" />\n  );\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar disableGutters variant=\"regular\">\n        <Autocomplete\n          fullWidth\n          classes={{\n            option: classes.option,\n          }}\n          onChange={(e, v) => setNameMovie(!v ? \"\" : v.Title)}\n          options={arrayMovieA2021}\n          getOptionLabel={(option) => option.Title}\n          renderOption={(option) => (\n            <React.Fragment>{option.Title}</React.Fragment>\n          )}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              aria-labelledby=\"Movies\"\n              id=\"movies\"\n              type=\"text\"\n              label=\"Escolha um Filme\"\n              variant=\"outlined\"\n              margin=\"dense\"\n              fullWidth\n            />\n          )}\n        />\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default AppBarChild;\n"]},"metadata":{},"sourceType":"module"}