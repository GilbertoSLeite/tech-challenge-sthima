{"ast":null,"code":"import axios from \"axios\";\nimport BooleanValidation from \"../booleanValidation/booleanValidation\";\nconst url = \"https://techchallengesthima.herokuapp.com/techchallenge/filmes/\";\n\nconst SearchData = async titleMovie => {\n  try {\n    const requestOptions = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"GET\",\n      redirect: \"follow\"\n    };\n    const response = await axios.get(url + titleMovie, requestOptions);\n    console.log(\"response \", response);\n    !BooleanValidation[response.status] && console.error(JSON.stringify(response.data.Search));\n    return response.externApiMovie;\n  } catch (error) {\n    console.error(\"Ocorreu \" + error + \" em \" + url);\n  }\n};\n\n_c = SearchData;\nexport default SearchData;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchData\");","map":{"version":3,"sources":["/home/gilbertosleite/Documents/Dados/RecutramentoGilbertoLeite/techchallengesthima/src/functions/SearchData/SearchData.js"],"names":["axios","BooleanValidation","url","SearchData","titleMovie","requestOptions","headers","method","redirect","response","get","console","log","status","error","JSON","stringify","data","Search","externApiMovie"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AAEA,MAAMC,GAAG,GAAG,iEAAZ;;AACA,MAAMC,UAAU,GAAG,MAAOC,UAAP,IAAsB;AACvC,MAAI;AACF,UAAMC,cAAc,GAAG;AACrBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OADY;AAIrBC,MAAAA,MAAM,EAAE,KAJa;AAKrBC,MAAAA,QAAQ,EAAE;AALW,KAAvB;AAOA,UAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUR,GAAG,GAAGE,UAAhB,EAA4BC,cAA5B,CAAvB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,QAAzB;AACA,KAACR,iBAAiB,CAACQ,QAAQ,CAACI,MAAV,CAAlB,IACEF,OAAO,CAACG,KAAR,CAAcC,IAAI,CAACC,SAAL,CAAeP,QAAQ,CAACQ,IAAT,CAAcC,MAA7B,CAAd,CADF;AAGA,WAAOT,QAAQ,CAACU,cAAhB;AACD,GAdD,CAcE,OAAOL,KAAP,EAAc;AACdH,IAAAA,OAAO,CAACG,KAAR,CAAc,aAAaA,KAAb,GAAqB,MAArB,GAA8BZ,GAA5C;AACD;AACF,CAlBD;;KAAMC,U;AAoBN,eAAeA,UAAf","sourcesContent":["import axios from \"axios\";\nimport BooleanValidation from \"../booleanValidation/booleanValidation\";\n\nconst url = \"https://techchallengesthima.herokuapp.com/techchallenge/filmes/\";\nconst SearchData = async (titleMovie) => {\n  try {\n    const requestOptions = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"GET\",\n      redirect: \"follow\",\n    };\n    const response = await axios.get(url + titleMovie, requestOptions);\n    console.log(\"response \", response);\n    !BooleanValidation[response.status] &&\n      console.error(JSON.stringify(response.data.Search));\n\n    return response.externApiMovie;\n  } catch (error) {\n    console.error(\"Ocorreu \" + error + \" em \" + url);\n  }\n};\n\nexport default SearchData;\n"]},"metadata":{},"sourceType":"module"}